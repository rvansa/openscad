use <writescad/Write.scad>

$fa=6;
inner_r=39.9;
outer_r=50;
//sphr=140;
volume_height=100;
outer_height=105;
topper_height=6;
angles=36;
sc_height=20;
mini=0.5;
decade_height=10;
sphere_r=160;

debug_shift=1;

PI=3.1415926;
bottom=outer_height - volume_height;

body();
handle();
 translate([0, 0, bottom - mini/2])
	union() {
		spiral();
		centis();
	}
 translate([0, 0, outer_height - decade_height])
	decades(20, decade_height);


module handle_base() {
	union() {
			difference() {
				translate([-handle_r, -2 *handle_r, 0])
					cube([2 * handle_r, handle_r, 1]);
				translate([-2 * handle_r, -2 * handle_r, 0])
					cylinder(r=outer_r, h=10, center=true);
				translate([2 * handle_r, -2 * handle_r, 0])
					cylinder(r=outer_r, h=10, center=true);

			}
			translate([0, -2*handle_r, 0])
				cylinder(r=2 * handle_r - outer_r, h=1);
		}
}

module handle() {
	handle_r=outer_r/sqrt(2);
	translate([0, 0, outer_height])
		
}

module body() {
   sphere_center=outer_r + sqrt(pow(sphere_r, 2) - pow(outer_height/2, 2));
   difference() {
      union() {
         translate([0, 0, outer_height])
            cylinder(r=outer_r, h=topper_height);
	      for (c=[0:outer_height - 1]) {
		      translate([0, 0, c])
			      cylinder(r1=sphere_center - sqrt(pow(sphere_r, 2) - pow(c - outer_height/2, 2)),
						      r2=sphere_center - sqrt(pow(sphere_r, 2) - pow(c + 1 - outer_height/2, 2)),
						      h=1, center=false);
	      }
	   }
		union() {
		   translate([0, 0, bottom])
			   cylinder(r=inner_r, h=volume_height + topper_height - 2 + debug_shift, center=false);
			translate([0, 0, bottom + volume_height + topper_height - 2])
				cylinder(r1=inner_r, r2=inner_r + 1 + debug_shift, h=1 + debug_shift);
			translate([0, 0, bottom + volume_height + topper_height - 1])
				cylinder(r1=inner_r + 1, r2=inner_r + 4 + debug_shift, h=1 + debug_shift);
		}
   }   
}

module spiral() {
	sc_length=sqrt(4 * PI*PI * inner_r*inner_r + sc_height*sc_height);
	ss_length=sc_length / angles;
	ss_angle=asin(sc_height / sc_length);

	for(angle = [1:angles * (volume_height / sc_height)]) {
		rotate([0, 0, -360 * angle / angles])
			translate([inner_r - mini, 0, sc_height * angle / angles])
				rotate([-ss_angle, 0, 180 / angles])
					cube([mini, ss_length, mini]);
	}
}

module decades(num_decades, decade_height, font_size=4) {
	for(dec = [0:num_decades - 1]) {
		rotate([0, 0, -dec * 360 / num_decades])
			translate([inner_r - mini, -mini/2, 0])
				union() {
					cube([mini, mini, decade_height]);
					translate([0.2, font_size * 0.7, (decade_height - font_size)/2]) 
						rotate([90, 0, 270])
							write(str(dec * 100/num_decades), h=font_size, t=thickness, font="writescad/Letters.dxf");
				}
   }
	for(un = [1:100]) {
		rotate([0, 0, -un * 360 / 100])
			translate([inner_r - mini, -mini/2, decade_height - 3 * mini])
				cube([mini, mini, 3 * mini]);
	
	}
}

module centis(font_size=4) {
	for (cent = [0:5]) {
		translate([inner_r - mini + 0.2, font_size, cent * sc_height + 1])
			rotate([90, 0, 270])
				write(str(cent * 100), h=font_size, t=thickness, font="writescad/Letters.dxf");
	}
}
